
services:
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro

  qdrant:
    image: qdrant/qdrant:v1.9.0
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage

  neo4j:
    image: neo4j:5.24
    environment:
      NEO4J_AUTH: ${NEO4J_USER}/${NEO4J_PASSWORD}
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 1G
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - ./scripts/init_neo4j.cql:/init/init_neo4j.cql:ro

  api:
    build: 
      context: .
      dockerfile: Dockerfile
    command: ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000"]
    env_file:
      - .env
    depends_on:
      - postgres
      - qdrant
      - neo4j
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["python", "-m", "pipeline.run_pipeline"]
    env_file:
      - .env
    depends_on:
      - postgres
      - qdrant
      - neo4j
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env

volumes:
  pgdata:
  qdrant_storage:
  neo4j_data:
